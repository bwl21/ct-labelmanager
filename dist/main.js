!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.labelmanager=t():e.labelmanager=t()}(self,()=>(()=>{"use strict";var e={300:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChurchToolsApiService=void 0,t.ChurchToolsApiService=class{constructor(e){this.apiToken=null,this.loginToken=null,this.personId=null,this.config=e,this.loadStoredToken()}loadStoredToken(){try{const e=localStorage.getItem("churchtools_login_token");if(e){const t=JSON.parse(e);t.expires>Date.now()?(this.loginToken=t.token,this.personId=t.personId,console.log("Loaded stored login token")):(localStorage.removeItem("churchtools_login_token"),console.log("Stored token expired, removed"))}}catch(e){console.error("Error loading stored token:",e),localStorage.removeItem("churchtools_login_token")}}storeToken(e,t,n=24){try{const o={token:e,personId:t,expires:Date.now()+60*n*60*1e3};localStorage.setItem("churchtools_login_token",JSON.stringify(o)),console.log("Stored login token")}catch(e){console.error("Error storing token:",e)}}clearStoredToken(){localStorage.removeItem("churchtools_login_token"),this.loginToken=null,this.personId=null}async checkStoredToken(){if(!this.loginToken)return!1;try{return(await fetch(`${this.config.baseUrl}/api/whoami`,{headers:{Authorization:`Login ${this.loginToken}`,Accept:"application/json"},credentials:"include"})).ok?(console.log("Stored token is valid"),this.apiToken=this.loginToken,!0):(console.log("Stored token is invalid, clearing"),this.clearStoredToken(),!1)}catch(e){return console.error("Error checking stored token:",e),this.clearStoredToken(),!1}}async authenticate(){try{if(await this.checkStoredToken())return!0;console.log("Attempting authentication with:",this.config.baseUrl);const e=await fetch(`${this.config.baseUrl}/api/login`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},credentials:"include",body:JSON.stringify({username:this.config.username,password:this.config.password})}),t=await e.text();let n;try{n=JSON.parse(t)}catch(e){throw console.error("Invalid JSON response from login:",t),new Error("Invalid response from server")}if(!e.ok){const t=n.message||n.error||`HTTP ${e.status}: ${e.statusText}`;throw console.error("Login failed:",n),new Error(t)}let o=null;if(n.data&&n.data.personId?o=n.data.personId:n.data&&n.data.id&&(o=n.data.id),!o)throw console.error("No person ID in login response:",n),new Error("Could not get person ID from login");console.log("Login successful, person ID:",o);const a=await fetch(`${this.config.baseUrl}/api/persons/${o}/logintoken`,{method:"GET",headers:{Accept:"application/json"},credentials:"include"}),s=await a.text();let i;try{i=JSON.parse(s)}catch(e){throw console.error("Invalid JSON response from token request:",s),new Error("Invalid response from token request")}if(!a.ok){const e=i.message||i.error||`HTTP ${a.status}: ${a.statusText}`;throw console.error("Token request failed:",i),new Error(`Token request failed: ${e}`)}let r=null;if(i.data&&i.data.token?r=i.data.token:i.token?r=i.token:i.data&&"string"==typeof i.data&&(r=i.data),!r)throw console.error("No token in response:",i),new Error("No login token received");return this.loginToken=r,this.apiToken=r,this.personId=o,this.storeToken(r,o),console.log("Authentication successful, login token received and stored"),!0}catch(e){if(console.error("Authentication error:",e),this.clearStoredToken(),e instanceof TypeError&&e.message.includes("fetch"))throw new Error("Network error: Cannot connect to ChurchTools. Please check the URL and your internet connection.");throw e}}async logout(){try{this.loginToken&&await fetch(`${this.config.baseUrl}/api/persons/${this.personId}/logintoken`,{method:"DELETE",headers:{Authorization:`Login ${this.loginToken}`,Accept:"application/json"},credentials:"include"})}catch(e){console.error("Error revoking token:",e)}finally{this.clearStoredToken(),this.apiToken=null,console.log("Logged out and cleared tokens")}}isAuthenticated(){return null!==this.apiToken}getPersonId(){return this.personId}getAuthHeaders(){if(!this.apiToken)throw new Error("Not authenticated");const e={"Content-Type":"application/json"};return"session-based"!==this.apiToken&&(e.Authorization=`Login ${this.apiToken}`),e}async apiRequest(e,t={}){const n=`${this.config.baseUrl}/api${e}`,o={...this.getAuthHeaders(),Accept:"application/json",...t.headers};console.log(`API Request: ${t.method||"GET"} ${n}`);const a=await fetch(n,{...t,headers:o,credentials:"include"}),s=await a.text();let i;try{i=JSON.parse(s)}catch(e){throw console.error("Invalid JSON response:",s),new Error("Invalid response from server")}if(!a.ok){const e=i.message||i.error||`HTTP ${a.status}: ${a.statusText}`;throw console.error("API Error:",i),new Error(e)}return i}async fetchTags(e="persons"){try{return(await this.apiRequest(`/tags?type=${e}`)).data||[]}catch(e){throw console.error("Error fetching tags:",e),e}}async fetchPersonTags(){return this.fetchTags("persons")}async fetchSongTags(){return this.fetchTags("songs")}async fetchAllTags(){try{const[e,t]=await Promise.all([this.fetchPersonTags(),this.fetchSongTags()]);return{persons:e,songs:t}}catch(e){throw console.error("Error fetching all tags:",e),e}}async fetchTag(e){try{return(await this.apiRequest(`/tags/${e}`)).data}catch(t){throw console.error(`Error fetching tag ${e}:`,t),t}}async createTag(e,t="persons"){try{return(await this.apiRequest(`/tags?type=${t}`,{method:"POST",body:JSON.stringify(e)})).data}catch(e){throw console.error("Error creating tag:",e),e}}async updateTag(e,t,n="persons"){try{return(await this.apiRequest(`/tags/${e}?type=${n}`,{method:"PUT",body:JSON.stringify(t)})).data}catch(t){throw console.error(`Error updating tag ${e}:`,t),t}}async deleteTag(e,t="persons"){try{await this.apiRequest(`/tags/${e}?type=${t}`,{method:"DELETE"})}catch(t){throw console.error(`Error deleting tag ${e}:`,t),t}}async getDomainTypes(){try{return(await this.apiRequest("/tags/domains")).data||["person","group","event","resource","service"]}catch(e){return console.warn("Could not fetch domain types, using defaults:",e),["person","group","event","resource","service"]}}async searchTags(e){try{return(await this.apiRequest(`/tags?search=${encodeURIComponent(e)}`)).data||[]}catch(e){throw console.error("Error searching tags:",e),e}}async getTagsByDomain(e){try{return(await this.apiRequest(`/tags?domainType=${encodeURIComponent(e)}`)).data||[]}catch(t){throw console.error(`Error fetching tags for domain ${e}:`,t),t}}}}},t={};function n(o){var a=t[o];if(void 0!==a)return a.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,n),s.exports}var o={};return(()=>{var e=o;Object.defineProperty(e,"__esModule",{value:!0});const t=n(300);class a{constructor(){this.currentTagType="persons",this.editingTag=null,this.currentTags=[],this.selectedTagIds=new Set,this.config={baseUrl:"https://testbernhard.church.tools",username:"",password:""},this.apiService=new t.ChurchToolsApiService(this.config)}async init(){console.log("Initializing ChurchTools Label Manager..."),this.createUI(),await this.checkStoredAuthentication()}async checkStoredAuthentication(){const e=document.getElementById("auth-status");try{await this.apiService.checkStoredToken()?(e&&(e.textContent="✅ Authenticated (stored token)",e.className="auth-status success"),await this.loadTags(),this.showLogoutOption()):e&&(e.textContent="Please login",e.className="auth-status")}catch(t){console.error("Error checking stored authentication:",t),e&&(e.textContent="Please login",e.className="auth-status")}}showLogoutOption(){const e=document.getElementById("auth-section");if(e&&!document.getElementById("logout-btn")){const t=document.createElement("button");t.id="logout-btn",t.className="btn btn-secondary",t.textContent="Logout",t.style.marginLeft="10px",t.onclick=()=>this.logout();const n=e.querySelector(".form-group");n&&n.appendChild(t)}}async logout(){try{await this.apiService.logout();const e=document.getElementById("auth-status");e&&(e.textContent="Logged out",e.className="auth-status");const t=document.getElementById("logout-btn");t&&t.remove();const n=document.getElementById("tags-table-body");n&&(n.innerHTML='<tr><td colspan="7" style="text-align: center; padding: 40px; color: #666;">Please login to view tags</td></tr>'),this.selectedTagIds.clear(),this.updateSelection(),this.showMessage("Logged out successfully","success")}catch(e){this.showMessage(`Logout error: ${e}`,"error")}}updateApiConfig(){this.apiService=new t.ChurchToolsApiService(this.config)}createUI(){this.injectStyles();const e=document.createElement("div");e.id="labelmanager-container";const t=document.createElement("div");t.innerHTML='\n      <h1 style="color: #333; margin-bottom: 20px;">ChurchTools Label Manager</h1>\n      <div id="auth-section" class="auth-section">\n        <h3>Authentication</h3>\n        <div class="form-group">\n          <input type="text" id="username" placeholder="Username" class="form-input">\n          <input type="password" id="password" placeholder="Password" class="form-input">\n          <button id="login-btn" class="btn btn-primary">Login</button>\n          <span id="auth-status" class="auth-status"></span>\n        </div>\n      </div>\n    ';const n=document.createElement("div");n.innerHTML='\n      <div class="section-header">\n        <h2>Tags</h2>\n        <div>\n          <select id="tag-type-selector" class="form-input" style="margin-right: 10px;">\n            <option value="persons">Person Tags</option>\n            <option value="songs">Song Tags</option>\n          </select>\n          <button id="refresh-tags" class="btn btn-success">Refresh Tags</button>\n        </div>\n      </div>\n      <div id="create-tag-form" class="create-tag-form">\n        <h3 id="form-title">Create New Tag</h3>\n        <div class="form-group">\n          <input type="text" id="tag-name" placeholder="Tag Name" class="form-input" required>\n          <select id="tag-color" class="form-input">\n            <option value="">No Color</option>\n            <option value="green">🟢 Green</option>\n            <option value="blue">🔵 Blue</option>\n            <option value="red">🔴 Red</option>\n            <option value="yellow">🟡 Yellow</option>\n            <option value="purple">🟣 Purple</option>\n            <option value="orange">🟠 Orange</option>\n            <option value="teal">🟦 Teal</option>\n            <option value="pink">🩷 Pink</option>\n            <option value="emerald">💚 Emerald</option>\n            <option value="cyan">🩵 Cyan</option>\n            <option value="lime">🟢 Lime</option>\n            <option value="indigo">🟦 Indigo</option>\n            <option value="rose">🌹 Rose</option>\n            <option value="amber">🟨 Amber</option>\n            <option value="violet">🟣 Violet</option>\n            <option value="sky">☁️ Sky</option>\n            <option value="fuchsia">💜 Fuchsia</option>\n            <option value="gray">⚫ Gray</option>\n            <option value="black">⚫ Black</option>\n            <option value="white">⚪ White</option>\n            <option value="success">✅ Success</option>\n            <option value="warning">⚠️ Warning</option>\n            <option value="danger">❌ Danger</option>\n            <option value="info">ℹ️ Info</option>\n            <option value="error">❌ Error</option>\n            <option value="critical">🚨 Critical</option>\n            <option value="constructive">✅ Constructive</option>\n            <option value="destructive">💥 Destructive</option>\n            <option value="magic">✨ Magic</option>\n            <option value="basic">⚪ Basic</option>\n            <option value="default">⚪ Default</option>\n            <option value="accent">🎯 Accent</option>\n            <option value="parent">👨‍👩‍👧‍👦 Parent</option>\n          </select>\n          <input type="text" id="tag-description" placeholder="Description" class="form-input">\n          <select id="tag-type" class="form-input">\n            <option value="persons">Person Tag</option>\n            <option value="songs">Song Tag</option>\n          </select>\n          <button id="create-tag-btn" class="btn btn-primary">Create Tag</button>\n          <button id="update-tag-btn" class="btn btn-warning" style="display: none;">Update Tag</button>\n          <button id="cancel-edit-btn" class="btn btn-secondary" style="display: none;">Cancel</button>\n        </div>\n      </div>\n      <div id="bulk-operations" class="create-tag-form" style="background: #fff3cd; border-color: #ffeaa7;">\n        <h3>🔧 Bulk Operations</h3>\n        <div class="form-group">\n          <button id="select-all-btn" class="btn btn-secondary btn-sm">Select All</button>\n          <button id="select-none-btn" class="btn btn-secondary btn-sm">Select None</button>\n          <button id="select-by-prefix-btn" class="btn btn-secondary btn-sm">Select by Prefix</button>\n          <input type="text" id="prefix-input" placeholder="e.g., L:*" class="form-input" style="width: 120px;">\n          <span style="margin: 0 15px;">|</span>\n          <select id="bulk-color-selector" class="form-input">\n            <option value="">Select Color</option>\n            <option value="green">🟢 Green</option>\n            <option value="blue">🔵 Blue</option>\n            <option value="red">🔴 Red</option>\n            <option value="yellow">🟡 Yellow</option>\n            <option value="purple">🟣 Purple</option>\n            <option value="orange">🟠 Orange</option>\n            <option value="teal">🟦 Teal</option>\n            <option value="pink">🩷 Pink</option>\n            <option value="emerald">💚 Emerald</option>\n            <option value="cyan">🩵 Cyan</option>\n            <option value="lime">🟢 Lime</option>\n            <option value="indigo">🟦 Indigo</option>\n            <option value="rose">🌹 Rose</option>\n            <option value="amber">🟨 Amber</option>\n            <option value="violet">🟣 Violet</option>\n            <option value="sky">☁️ Sky</option>\n            <option value="fuchsia">💜 Fuchsia</option>\n            <option value="gray">⚫ Gray</option>\n            <option value="black">⚫ Black</option>\n            <option value="white">⚪ White</option>\n            <option value="success">✅ Success</option>\n            <option value="warning">⚠️ Warning</option>\n            <option value="danger">❌ Danger</option>\n            <option value="info">ℹ️ Info</option>\n            <option value="error">❌ Error</option>\n            <option value="critical">🚨 Critical</option>\n            <option value="constructive">✅ Constructive</option>\n            <option value="destructive">💥 Destructive</option>\n            <option value="magic">✨ Magic</option>\n            <option value="basic">⚪ Basic</option>\n            <option value="default">⚪ Default</option>\n            <option value="accent">🎯 Accent</option>\n            <option value="parent">👨‍👩‍👧‍👦 Parent</option>\n          </select>\n          <button id="apply-bulk-color-btn" class="btn btn-success">Apply Color to Selected</button>\n          <button id="delete-selected-btn" class="btn btn-danger">Delete Selected</button>\n        </div>\n        <div id="selection-info" style="margin-top: 10px; font-size: 14px; color: #856404;"></div>\n      </div>\n      <div id="tags-table-container">\n        <table id="tags-table" style="width: 100%; border-collapse: collapse; margin-top: 20px;">\n          <thead>\n            <tr style="background: #f8f9fa; border-bottom: 2px solid #dee2e6;">\n              <th style="padding: 12px; text-align: left; border: 1px solid #dee2e6;">\n                <input type="checkbox" id="select-all-checkbox" style="margin-right: 8px;">\n                Select\n              </th>\n              <th style="padding: 12px; text-align: left; border: 1px solid #dee2e6;">Color</th>\n              <th style="padding: 12px; text-align: left; border: 1px solid #dee2e6;">Name</th>\n              <th style="padding: 12px; text-align: left; border: 1px solid #dee2e6;">Description</th>\n              <th style="padding: 12px; text-align: left; border: 1px solid #dee2e6;">Type</th>\n              <th style="padding: 12px; text-align: left; border: 1px solid #dee2e6;">ID</th>\n              <th style="padding: 12px; text-align: left; border: 1px solid #dee2e6;">Actions</th>\n            </tr>\n          </thead>\n          <tbody id="tags-table-body">\n          </tbody>\n        </table>\n      </div>\n    ',e.appendChild(t),e.appendChild(n),(document.querySelector("#content")||document.body).appendChild(e),this.setupEventListeners()}injectStyles(){const e="labelmanager-styles";if(document.getElementById(e))return;const t=document.createElement("style");t.id=e,t.textContent="\n      /* ChurchTools Label Manager Styles */\n      #labelmanager-container {\n        padding: 20px;\n        max-width: 1200px;\n        margin: 0 auto;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      }\n\n      .auth-section {\n        margin-bottom: 20px;\n        padding: 15px;\n        background: #f5f5f5;\n        border-radius: 5px;\n        border: 1px solid #ddd;\n      }\n\n      .auth-section h3 {\n        margin-top: 0;\n        color: #333;\n      }\n\n      .form-group {\n        display: flex;\n        gap: 10px;\n        align-items: center;\n        flex-wrap: wrap;\n      }\n\n      .form-input {\n        padding: 8px 12px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        font-size: 14px;\n        min-width: 150px;\n      }\n\n      .btn {\n        padding: 8px 16px;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 14px;\n        font-weight: 500;\n        transition: background-color 0.2s;\n      }\n\n      .btn-primary {\n        background: #007cba;\n        color: white;\n      }\n\n      .btn-primary:hover {\n        background: #005a87;\n      }\n\n      .btn-success {\n        background: #28a745;\n        color: white;\n      }\n\n      .btn-success:hover {\n        background: #1e7e34;\n      }\n\n      .btn-warning {\n        background: #ffc107;\n        color: #212529;\n      }\n\n      .btn-warning:hover {\n        background: #e0a800;\n      }\n\n      .btn-danger {\n        background: #dc3545;\n        color: white;\n      }\n\n      .btn-danger:hover {\n        background: #c82333;\n      }\n\n      .btn-secondary {\n        background: #6c757d;\n        color: white;\n      }\n\n      .btn-secondary:hover {\n        background: #545b62;\n      }\n\n      .btn-sm {\n        padding: 5px 10px;\n        font-size: 12px;\n      }\n\n      .auth-status {\n        margin-left: 10px;\n        font-weight: 500;\n      }\n\n      .auth-status.success {\n        color: #28a745;\n      }\n\n      .auth-status.error {\n        color: #dc3545;\n      }\n\n      .section-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 20px;\n      }\n\n      .section-header h2 {\n        margin: 0;\n        color: #333;\n      }\n\n      .create-tag-form {\n        margin-bottom: 20px;\n        padding: 15px;\n        background: #f8f9fa;\n        border-radius: 5px;\n        border: 1px solid #e9ecef;\n      }\n\n      .create-tag-form h3 {\n        margin-top: 0;\n        color: #333;\n      }\n\n      #tags-table {\n        background: white;\n        border-radius: 8px;\n        overflow: hidden;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      }\n\n      #tags-table th {\n        background: #f8f9fa;\n        font-weight: 600;\n        color: #495057;\n        border-bottom: 2px solid #dee2e6;\n      }\n\n      #tags-table td {\n        padding: 12px;\n        border: 1px solid #dee2e6;\n        vertical-align: middle;\n      }\n\n      #tags-table tr:nth-child(even) {\n        background: #f8f9fa;\n      }\n\n      #tags-table tr:hover {\n        background: #e9ecef;\n      }\n\n      .tag-color-cell {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n        border-radius: 50%;\n        border: 1px solid #ddd;\n        vertical-align: middle;\n      }\n\n      .tag-name-cell {\n        font-weight: 600;\n        color: #333;\n      }\n\n      .tag-description-cell {\n        color: #666;\n        font-size: 14px;\n        max-width: 200px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .tag-type-cell {\n        background: #e9ecef;\n        padding: 4px 8px;\n        border-radius: 12px;\n        font-size: 12px;\n        font-weight: 500;\n        color: #495057;\n        display: inline-block;\n      }\n\n      .tag-id-cell {\n        font-size: 12px;\n        color: #999;\n        font-family: monospace;\n      }\n\n      .tag-actions-cell {\n        white-space: nowrap;\n      }\n\n      .tag-checkbox {\n        transform: scale(1.2);\n      }\n\n      .selected-row {\n        background: #d4edda !important;\n      }\n\n      .empty-state {\n        text-align: center;\n        color: #666;\n        padding: 40px 20px;\n        background: #f8f9fa;\n        border-radius: 8px;\n        border: 2px dashed #dee2e6;\n      }\n\n      .error-message {\n        color: #dc3545;\n        background: #f8d7da;\n        border: 1px solid #f5c6cb;\n        border-radius: 4px;\n        padding: 12px;\n        margin: 10px 0;\n      }\n\n      .warning-message {\n        color: #856404;\n        background: #fff3cd;\n        border: 1px solid #ffeaa7;\n        border-radius: 4px;\n        padding: 12px;\n        margin: 10px 0;\n      }\n\n      .loading {\n        text-align: center;\n        padding: 20px;\n        color: #666;\n      }\n\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n\n      @keyframes slideOut {\n        from {\n          transform: translateX(0);\n          opacity: 1;\n        }\n        to {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n      }\n\n      @media (max-width: 768px) {\n        #labelmanager-container {\n          padding: 10px;\n        }\n        \n        .form-group {\n          flex-direction: column;\n          align-items: stretch;\n        }\n        \n        .form-input {\n          min-width: auto;\n          margin-bottom: 10px;\n        }\n        \n        .section-header {\n          flex-direction: column;\n          align-items: stretch;\n          gap: 10px;\n        }\n        \n        #tags-table {\n          font-size: 12px;\n        }\n        \n        #tags-table th,\n        #tags-table td {\n          padding: 8px 4px;\n        }\n        \n        .tag-description-cell {\n          max-width: 100px;\n        }\n        \n        .tag-actions-cell .btn {\n          padding: 4px 8px;\n          font-size: 11px;\n        }\n      }\n      }\n    ",document.head.appendChild(t)}setupEventListeners(){const e=document.getElementById("login-btn");e?.addEventListener("click",async()=>{const e=document.getElementById("username").value,t=document.getElementById("password").value;if(e&&t){this.config.username=e,this.config.password=t,this.updateApiConfig();const n=document.getElementById("auth-status");n&&(n.textContent="Authenticating...",n.className="auth-status");try{const e=await this.apiService.authenticate();if(n)if(e){const e=this.apiService.getPersonId();n.textContent=`✅ Authenticated (Person ID: ${e})`,n.className="auth-status success"}else n.textContent="❌ Authentication failed",n.className="auth-status error";e&&(document.getElementById("username").value="",document.getElementById("password").value="",this.showLogoutOption(),await this.loadTags())}catch(e){n&&(n.textContent=`❌ Error: ${e}`,n.className="auth-status error"),console.error("Authentication error:",e)}}else{const e=document.getElementById("auth-status");e&&(e.textContent="❌ Please enter username and password",e.className="auth-status error")}}),document.getElementById("update-tag-btn")?.addEventListener("click",async()=>{if(!this.editingTag)return;const e=document.getElementById("tag-name").value,t=document.getElementById("tag-color").value,n=document.getElementById("tag-description").value,o=document.getElementById("tag-type").value;if(e&&o)try{await this.apiService.updateTag(this.editingTag.id,{name:e,color:t||void 0,description:n||void 0,domainType:o},o),this.showMessage("Tag updated successfully!","success"),this.cancelEdit(),await this.loadTags()}catch(e){this.showMessage(`Error updating tag: ${e}`,"error")}}),document.getElementById("cancel-edit-btn")?.addEventListener("click",()=>{this.cancelEdit()}),document.getElementById("select-all-btn")?.addEventListener("click",()=>{this.selectAllTags()}),document.getElementById("select-none-btn")?.addEventListener("click",()=>{this.selectNoneTags()}),document.getElementById("select-by-prefix-btn")?.addEventListener("click",()=>{this.selectByPrefix()}),document.getElementById("apply-bulk-color-btn")?.addEventListener("click",async()=>{await this.applyBulkColor()}),document.getElementById("delete-selected-btn")?.addEventListener("click",async()=>{await this.deleteSelectedTags()}),document.getElementById("select-all-checkbox")?.addEventListener("change",e=>{e.target.checked?this.selectAllTags():this.selectNoneTags()});const t=document.getElementById("tag-type-selector");t?.addEventListener("change",()=>{this.currentTagType=t.value,this.loadTags()});const n=document.getElementById("refresh-tags");n?.addEventListener("click",()=>this.loadTags());const o=document.getElementById("create-tag-btn");o?.addEventListener("click",async()=>{const e=document.getElementById("tag-name").value,t=document.getElementById("tag-color").value,n=document.getElementById("tag-description").value,o=document.getElementById("tag-type").value;if(e&&o)try{await this.apiService.createTag({name:e,color:t||void 0,description:n||void 0,domainType:o},o),document.getElementById("tag-name").value="",document.getElementById("tag-color").value="",document.getElementById("tag-description").value="",this.showMessage("Tag created successfully!","success"),await this.loadTags()}catch(e){this.showMessage(`Error creating tag: ${e}`,"error")}}),document.getElementById("update-tag-btn")?.addEventListener("click",async()=>{if(!this.editingTag)return;const e=document.getElementById("tag-name").value,t=document.getElementById("tag-color").value,n=document.getElementById("tag-description").value,o=document.getElementById("tag-type").value;if(e&&o)try{await this.apiService.updateTag(this.editingTag.id,{name:e,color:t||void 0,description:n||void 0,domainType:o},o),this.showMessage("Tag updated successfully!","success"),this.cancelEdit(),await this.loadTags()}catch(e){this.showMessage(`Error updating tag: ${e}`,"error")}}),document.getElementById("cancel-edit-btn")?.addEventListener("click",()=>{this.cancelEdit()}),document.getElementById("select-all-btn")?.addEventListener("click",()=>{this.selectAllTags()}),document.getElementById("select-none-btn")?.addEventListener("click",()=>{this.selectNoneTags()}),document.getElementById("select-by-prefix-btn")?.addEventListener("click",()=>{this.selectByPrefix()}),document.getElementById("apply-bulk-color-btn")?.addEventListener("click",async()=>{await this.applyBulkColor()}),document.getElementById("delete-selected-btn")?.addEventListener("click",async()=>{await this.deleteSelectedTags()}),document.getElementById("select-all-checkbox")?.addEventListener("change",e=>{e.target.checked?this.selectAllTags():this.selectNoneTags()})}async loadTags(){const e=document.getElementById("tags-list");e&&(e.innerHTML='<div class="loading">Loading tags...</div>');try{const e=await this.apiService.fetchTags(this.currentTagType);this.currentTags=e,this.displayTags(e)}catch(t){console.error("Error loading tags:",t),e&&(e.innerHTML=`<div class="error-message">Error loading tags: ${t}</div>`)}}displayTags(e){const t=document.getElementById("tags-table-body");t&&(0!==e.length?(t.innerHTML=e.map(e=>`\n      <tr data-tag-id="${e.id}">\n        <td>\n          <input type="checkbox" class="tag-checkbox" data-tag-id="${e.id}" onchange="window.labelManager.updateSelection()">\n        </td>\n        <td>\n          <span class="tag-color-cell" style="background: ${this.getColorHex(e.color)};"></span>\n        </td>\n        <td class="tag-name-cell">${this.escapeHtml(e.name)}</td>\n        <td class="tag-description-cell" title="${this.escapeHtml(e.description||"")}">\n          ${e.description?this.escapeHtml(e.description):"-"}\n        </td>\n        <td>\n          <span class="tag-type-cell">${this.currentTagType}</span>\n        </td>\n        <td class="tag-id-cell">#${e.id}</td>\n        <td class="tag-actions-cell">\n          <button onclick="window.labelManager.editTag(${e.id})" class="btn btn-warning btn-sm">Edit</button>\n          <button onclick="window.labelManager.confirmDeleteTag(${e.id})" class="btn btn-danger btn-sm" style="margin-left: 4px;">Delete</button>\n        </td>\n      </tr>\n    `).join(""),this.updateSelection()):t.innerHTML='\n        <tr>\n          <td colspan="7" style="text-align: center; padding: 40px; color: #666;">\n            No tags found. Create your first tag above!\n          </td>\n        </tr>\n      ')}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}getColorHex(e){return e&&{green:"#28a745",blue:"#007bff",red:"#dc3545",yellow:"#ffc107",purple:"#6f42c1",orange:"#fd7e14",teal:"#20c997",pink:"#e83e8c",emerald:"#10b981",cyan:"#06b6d4",lime:"#84cc16",indigo:"#6366f1",rose:"#f43f5e",amber:"#f59e0b",violet:"#8b5cf6",sky:"#0ea5e9",fuchsia:"#d946ef",gray:"#6b7280",black:"#000000",white:"#ffffff",success:"#28a745",warning:"#ffc107",danger:"#dc3545",info:"#17a2b8",error:"#dc3545",critical:"#dc3545",constructive:"#28a745",destructive:"#dc3545",magic:"#8b5cf6",basic:"#6c757d",default:"#6c757d",accent:"#007bff",parent:"#6f42c1"}[e]||"#ccc"}async editTag(e){try{const t=(await this.apiService.fetchTags(this.currentTagType)).find(t=>t.id===e);if(!t)return void this.showMessage("Tag not found","error");this.editingTag=t,document.getElementById("tag-name").value=t.name,document.getElementById("tag-color").value=t.color||"",document.getElementById("tag-description").value=t.description||"",document.getElementById("tag-type").value=this.currentTagType;const n=document.getElementById("form-title"),o=document.getElementById("create-tag-btn"),a=document.getElementById("update-tag-btn"),s=document.getElementById("cancel-edit-btn");n&&(n.textContent=`Edit Tag: ${t.name}`),o&&(o.style.display="none"),a&&(a.style.display="inline-block"),s&&(s.style.display="inline-block"),document.getElementById("create-tag-form")?.scrollIntoView({behavior:"smooth"})}catch(e){this.showMessage(`Error loading tag for editing: ${e}`,"error")}}cancelEdit(){this.editingTag=null,document.getElementById("tag-name").value="",document.getElementById("tag-color").value="",document.getElementById("tag-description").value="";const e=document.getElementById("form-title"),t=document.getElementById("create-tag-btn"),n=document.getElementById("update-tag-btn"),o=document.getElementById("cancel-edit-btn");e&&(e.textContent="Create New Tag"),t&&(t.style.display="inline-block"),n&&(n.style.display="none"),o&&(o.style.display="none")}updateSelection(){const e=document.querySelectorAll(".tag-checkbox"),t=document.getElementById("select-all-checkbox"),n=document.getElementById("selection-info");this.selectedTagIds.clear(),e.forEach(e=>{e.checked&&this.selectedTagIds.add(parseInt(e.dataset.tagId||"0"))}),e.forEach(e=>{const t=e.closest("tr");t&&(e.checked?t.classList.add("selected-row"):t.classList.remove("selected-row"))}),t&&(0===this.selectedTagIds.size?(t.indeterminate=!1,t.checked=!1):this.selectedTagIds.size===e.length?(t.indeterminate=!1,t.checked=!0):(t.indeterminate=!0,t.checked=!1)),n&&(0===this.selectedTagIds.size?n.textContent="No tags selected":n.textContent=`${this.selectedTagIds.size} tag${1===this.selectedTagIds.size?"":"s"} selected`)}selectAllTags(){document.querySelectorAll(".tag-checkbox").forEach(e=>{e.checked=!0}),this.updateSelection()}selectNoneTags(){document.querySelectorAll(".tag-checkbox").forEach(e=>{e.checked=!1}),this.updateSelection()}selectByPrefix(){const e=document.getElementById("prefix-input").value;if(!e.trim())return void this.showMessage("Please enter a prefix pattern","warning");const t=e.trim(),n=t.endsWith("*"),o=n?t.slice(0,-1):t,a=document.querySelectorAll(".tag-checkbox");let s=0;a.forEach(e=>{const t=parseInt(e.dataset.tagId||"0"),a=this.currentTags.find(e=>e.id===t);a&&(n?a.name.toLowerCase().startsWith(o.toLowerCase()):a.name.toLowerCase()===o.toLowerCase())&&(e.checked=!0,s++)}),this.updateSelection(),0===s?this.showMessage(`No tags found matching pattern: ${e}`,"warning"):this.showMessage(`Selected ${s} tags matching: ${e}`,"success")}async applyBulkColor(){const e=document.getElementById("bulk-color-selector"),t=e.value;if(0===this.selectedTagIds.size)return void this.showMessage("Please select tags first","warning");if(!t)return void this.showMessage("Please select a color","warning");const n=this.currentTags.filter(e=>this.selectedTagIds.has(e.id));if(!confirm(`Apply color "${t}" to ${n.length} selected tags?\n\nTags: ${n.map(e=>e.name).join(", ")}`))return;const o=document.getElementById("selection-info");o&&(o.innerHTML="🔄 Applying colors to selected tags...");let a=0,s=0;const i=[];for(const e of n){try{await this.apiService.updateTag(e.id,{...e,color:t},this.currentTagType),a++}catch(t){s++,i.push(`${e.name}: ${t}`),console.error(`Failed to update tag ${e.name}:`,t)}await new Promise(e=>setTimeout(e,100))}0===s?this.showMessage(`✅ Successfully colored ${a} tags!`,"success"):this.showMessage(`⚠️ ${a} successful, ${s} failed`,"warning"),this.selectNoneTags(),e.value="",await this.loadTags()}async deleteSelectedTags(){if(0===this.selectedTagIds.size)return void this.showMessage("Please select tags to delete","warning");const e=this.currentTags.filter(e=>this.selectedTagIds.has(e.id));if(!confirm(`Delete ${e.length} selected tags?\n\nThis action cannot be undone!\n\nTags: ${e.map(e=>e.name).join(", ")}`))return;const t=document.getElementById("selection-info");t&&(t.innerHTML="🔄 Deleting selected tags...");let n=0,o=0;const a=[];for(const t of e){try{await this.apiService.deleteTag(t.id,this.currentTagType),n++}catch(e){o++,a.push(`${t.name}: ${e}`),console.error(`Failed to delete tag ${t.name}:`,e)}await new Promise(e=>setTimeout(e,100))}0===o?this.showMessage(`✅ Successfully deleted ${n} tags!`,"success"):this.showMessage(`⚠️ ${n} deleted, ${o} failed`,"warning"),this.selectNoneTags(),await this.loadTags()}async confirmDeleteTag(e){if(confirm("Are you sure you want to delete this tag?"))try{await this.apiService.deleteTag(e,this.currentTagType),this.showMessage("Tag deleted successfully!","success"),await this.loadTags()}catch(e){this.showMessage(`Error deleting tag: ${e}`,"error")}}showMessage(e,t){const n=document.querySelector(".message-toast");n&&n.remove();const o=document.createElement("div");let a="error-message";"success"===t?a="success-message":"warning"===t&&(a="warning-message"),o.className=`message-toast ${a}`,o.textContent=e,o.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      z-index: 1000;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    ",document.body.appendChild(o),setTimeout(()=>{o.style.animation="slideOut 0.3s ease-in",setTimeout(()=>o.remove(),300)},3e3)}}let s;"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{s=new a,window.labelManager=s,s.init()}):(s=new a,window.labelManager=s,s.init()),e.default=a})(),o})());